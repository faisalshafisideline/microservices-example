version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network

  article-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: article-db
    environment:
      SA_PASSWORD: "ArticleDb123!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - article_db_data:/var/opt/mssql
    networks:
      - microservices-network

  reporting-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: reporting-db
    environment:
      SA_PASSWORD: "ReportingDb123!"
      ACCEPT_EULA: "Y"
    ports:
      - "1434:1433"
    volumes:
      - reporting_db_data:/var/opt/mssql
    networks:
      - microservices-network

  article-service:
    build:
      context: ./src/ArticleService
      dockerfile: Dockerfile
    container_name: article-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=article-db;Database=ArticleDb;User Id=sa;Password=ArticleDb123!;TrustServerCertificate=true
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=admin
      - RabbitMQ__Password=admin123
    depends_on:
      - article-db
      - rabbitmq
    networks:
      - microservices-network
    expose:
      - "8080"
      - "8081"

  reporting-service:
    build:
      context: ./src/ReportingService
      dockerfile: Dockerfile
    container_name: reporting-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=reporting-db;Database=ReportingDb;User Id=sa;Password=ReportingDb123!;TrustServerCertificate=true
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=admin
      - RabbitMQ__Password=admin123
      - ArticleService__GrpcEndpoint=http://article-service:8081
    depends_on:
      - reporting-db
      - rabbitmq
      - article-service
    networks:
      - microservices-network
    expose:
      - "8080"

  api-gateway:
    build:
      context: ./src/ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - article-service
      - reporting-service
    networks:
      - microservices-network
    volumes:
      - ./logs/gateway:/app/logs

volumes:
  rabbitmq_data:
  article_db_data:
  reporting_db_data:

networks:
  microservices-network:
    driver: bridge 